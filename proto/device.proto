syntax = "proto2";

import "nanopb.proto";
import "enums.proto";

message I2CDevice {
  required int32 block = 1;
  required int32 sda = 2;
  required int32 scl = 3;
  required int32 clock = 4;
}

message SPIDevice {
  required int32 block = 1;
  required int32 mosi = 2;
  required int32 miso = 3;
  required int32 sck = 4;
  required int32 clock = 5;
}
message PeripheralDevice { required I2CDevice i2c = 1; }

message Adxl345Device { required I2CDevice i2c = 1; }

message Lis3dhDevice { required I2CDevice i2c = 1; }

message Mpu6050Device { required I2CDevice i2c = 1; }

message Max1704xDevice { required I2CDevice i2c = 1; }

message Mpr121Device {
  required I2CDevice i2c = 1;
  required int32 touchpadCount = 2;
  required int32 ddrPins = 3;    // pin data direction register
  required int32 enablePins = 4; // pin enable
}

message WiiDevice { required I2CDevice i2c = 1; }

message CrazyGuitarNeckDevice { required I2CDevice i2c = 1; }

message GuitarHero5NeckDevice { required I2CDevice i2c = 1; }

message DJHeroTurntableDevice { required I2CDevice i2c = 1; }

message BandHeroDrumDevice { required I2CDevice i2c = 1; }

message SerialMidiDevice {
  optional int32 tx = 1;
  optional int32 rx = 2;
}
message UsbHostDevice {
  required int32 dp = 1;
  required bool enable5v = 2;
  required bool dmFirst = 3;
}
message MultiplexerDevice {
  required int32 inputPin = 1;
  required bool sixteenChannel = 2;
  required int32 s0Pin = 3;
  required int32 s1Pin = 4;
  required int32 s2Pin = 5;
  optional int32 s3Pin = 6;
}
message WorldTourDrumDevice { required SPIDevice spi = 1; }
message PSXDevice {
  required SPIDevice spi = 1;
  required int32 attPin = 2;
  required int32 ackPin = 3;
}
message SNESDevice {
  required int32 clockPin = 1;
  required int32 latchPin = 2;
  required int32 dataPin = 3;
}
message JoybusDevice { required int32 dataPin = 1; }

message WiiEmulationDevice { required I2CDevice i2c = 1; }
message PSXEmulationDevice {
  required int32 dataPin = 1;
  required int32 commandPin = 2;
  required int32 attentionPin = 3;
  required int32 clockPin = 4;
  required int32 acknowledgePin = 5;
}
message JoybusEmulationDevice { required int32 dataPin = 1; }

message Device {
  required int32 id = 1;
  oneof device {
    Adxl345Device adxl = 2;
    Lis3dhDevice lis3dh = 3;
    Mpu6050Device mpu6050 = 4;
    Max1704xDevice max170x = 5;
    Mpr121Device mpr121 = 6;
    WiiDevice wii = 7;
    CrazyGuitarNeckDevice crazyGuitarNeck = 8;
    GuitarHero5NeckDevice gh5Neck = 9;
    DJHeroTurntableDevice djhTurntable = 10;
    BandHeroDrumDevice bhDrum = 11;
    SerialMidiDevice midiSerial = 12;
    UsbHostDevice usbHost = 13;
    MultiplexerDevice multiplexer = 14;
    WorldTourDrumDevice worldTourDrum = 15;
    PSXDevice psx = 16;
    SNESDevice snes = 17;
    JoybusDevice joybus = 18;
    WiiEmulationDevice wiiEmulation = 19;
    PSXEmulationDevice psxEmulation = 20;
    JoybusEmulationDevice joybusEmulation = 21;
    PeripheralDevice peripheral = 22;
  }
}